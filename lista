#Questão 2 item a)
def triangulo_pascal(n):
    if n==1:
        return [1]
    if n==2:
        return [[1], [1, 1]]
    la= triangulo_pascal(n-1) #calcula o triangulo com as n-1 primeiras linhas
    proxima_linha=[1]
    for i in range(1, n-1):
        numero= la[n-2][i-1]+la[n-2][i] #soma o elemento de cima com o da direita da linha anterior
        proxima_linha.append(numero)
    proxima_linha.append(1)
    la.append(proxima_linha) #cria uma lista de listas onde cada lista é uma linha do triângulo
    return la
print(triangulo_pascal(6))

#Questão 2 item b)
#A complexidade desse algoritmo é O(n²)

#Questão 4 não pronta
def polinomio(pol:str):
    dici={}
    lista=list(pol)
    for i in lista:
        if i=='x':
            lista.remove(i)  
    for j in lista:
        if j=='^':
            lista.remove(j)
        elif j=='+':
            lista.remove(j)
        elif j== '-':
            lista.remove(j)
    print (lista)
    dici[0]=lista[len(lista)-1]
    dici[1]=lista[len(lista)-2]
    for q in range(len(lista)-3, 0 , -2):
        dici[lista[q]]= lista[q-1]
    
    print(dici)
polinomio('2x^3-4x+5')
